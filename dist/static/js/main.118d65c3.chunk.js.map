{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","userSignOut","getState","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","my_project","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmmit","preventDefault","userSignIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","signIn","SignUp","firstName","lastName","userSignUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","error","signUp","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.118d65c3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\n      <li><a onClick={props.userSignOut}>Log Out</a></li>\n      <li><NavLink to=\"/\" className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userSignOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: \"SIGNOUT_SUCCESS\" });\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    \n    // 新增一個使用者\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((response) => {\n      // 利用firebase建立的user的uid，去firestore的users collection內新增一個documents，其id就是uid\n      return firestore.collection('users').doc(response.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: \"SIGNUP_SUCCESS\"});\n    }).catch((error) => {\n      dispatch({ type: \"SIGNUP_ERROR\", error});\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/signup\">Signup</NavLink></li>\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,          // 此state是在設定完useFirestoreForProfile後，才拿得到user的訊息(查看index.js)\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport { timeout } from 'q';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  console.log(notifications);\n  return (\n    <div>\n      <div className=\"section\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Notifications</span>\n            <ul className=\"notifications\">\n              { notifications && notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                )\n              }) }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary;","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map( project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList;","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props)\n    const { projects, auth, notifications } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            {/* 將redux給予的props.projects取出後，再當成參數傳給ProjectList */}\n            <ProjectList projects={projects}/>      \n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// 將redux內的state轉換成props，以供此 class component 使用\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    // state.project的project是在rootReducer.js定義的\n    // state.project.projects的projects是在projectReducer.js的initState給予得值\n    // 我們在這裡定義的projects key，將可以透過 this.tsPropertySignature.projects取得\n    \n    // projects: state.project.projects\n    projects: state.firestore.ordered.projects,     // 原本是利用上面的state.project.projects 取得 dummy data，現在改成從firestore存取real data\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\n// compose將component變成higher order component，在此是將connect和firestoreConnect變成Dashboard的higher order component\n// connect是react和redux的黏合劑，需要帶入mapStateToProps，使得Dashboard component知道redux給予它什麼props(在這裡是projects，我們定義的key)\n// firestoreConnect用來和fiestore做data sync，類似一個listener，隨時監聽firestire的變動，它會導致firestoreReducer去和firestore database去做資料的sync，由於資料會存在store內(因我們在rootReducer有定義firestoreReducer)，因此可以透過props去存去資料(流程是，先在這裡將data取出，存進redux store，再透過mapStateToProps轉換成props以供存取)。利用一個list來定義要存取哪些collection(在此為 projects collection & notifications collection)。 \nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst  ProjectDetails = (props) => {\n  // 從url route 取得 文章的 id\n  const id = props.match.params.id;\n  // console.log(props);\n  const { my_project, auth } = props;     // my_project 是利用 mapStateToProps function 從 firebase 存到 store(redux)，再map到此component的props內的\n  if(!auth.uid) return <Redirect to='/signin' />\n\n  if(my_project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">\n              { my_project.title } - { id }\n            </span>\n            <p>{ my_project.content }</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>Posted by { my_project.authorFirstName } { my_project.authorLastName }</div>\n            <div>moment(project.createdAt.toDate()).calendar()</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const my_project = projects ? projects[id] : null;\n  return {\n    my_project: my_project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {  collection: 'projects' }\n  ])\n)(ProjectDetails);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmmit = (e) => {\n    e.preventDefault();\n    this.props.userSignIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userSignIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmmit = (e) => {\n    e.preventDefault();\n    this.props.userSignUp(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">SingUp</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userSignUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state)\n    \n    // 存取mapDispatchToProps定義的createProject，我們將this.state當成參數(因此就是第51行的參數，名為project)\n    this.props.createProject(this.state);\n    // redirct to home page\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\"  onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // dispatch 內的 createProject，即是我們從import進來的function\n    // key createProject，我們將可以透過props access 到它。在此的參數project，即是this.state，並且將它傳入dispatch(createProject(project)內(將由projectActions.js接收)\n    createProject: (project) => dispatch(createProject(project)) \n  }\n}\n\n// 第一個參數是給 mapStateToProps使用，第二個是mapDispatchToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","// 參數project是由CreateProject.js dispath來的參數，其代表this.state內的所有properties\nexport const createProject = (project) => {\n  // 由於使用了 thunk package，因此可以return function\n  //  getFirebase, getFirestore 是由index.js的thunk.withExtraArgument({getFirebase, getFirestore} 傳入\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // we can make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: \"CREATE_PROJECT\", project});\n    }).catch((err) => {\n      dispatch({ type: \"CREATE_PROJECT_ERROR\", err});\n    })\n  }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state=initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');      \n      return {\n        ...state, \n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.error.message       // error是從authAction內catch得到，並傳遞過來的，會由action接收\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","const initState = {\n  // 由於改成存firestore存取real data，因此不再需要dummy data\n  // projects: [\n  //   {id: 1, title: '123', content: \"我很好\"},\n  //   {id: 2, title: '456', content: \"拉肚子囉\"},\n  //   {id: 3, title: '789', content: \"別再拉了...\"},\n  // ]\n};\n\nconst projectReducer = (state=initState, action) => {\n  // acation的type是我們在action js檔案裡面定義的\n  switch(action.type) {\n    case 'CREATE_PROJECT':\n      // 當action對應到我們的定義定義時(在actions/projectActions.js內)\n      console.log('create_project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log(\"create project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDZF6ShCG3rHyb1x0ibWi3MqAFDH95xUhE\",\n  authDomain: \"yao-react-redix.firebaseapp.com\",\n  databaseURL: \"https://yao-react-redix.firebaseio.com\",\n  projectId: \"yao-react-redix\",\n  storageBucket: \"\",\n  messagingSenderId: \"691516237450\",\n  appId: \"1:691516237450:web:de656c1fc2dde18f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore().settings({ timestampsInSnapshots: true });    // It's default settings now\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n// withExtraArgument讓我們可以傳入需要使用到的東西，然後在action時使用它們(可以參考store/actions/projectActions.js)\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    // useFirestoreForProfile 是用來取出使用者存在firestore的資訊(由於我們使用firebase給予的uid當成firestore user collection的document的uid，因此可以對應到正確的user)\n    // userProfile：告訴firestore要使用個collections內的資料當成 user profile\n    // 設定完上述兩者之後，就可以透過state.firebase.profile看到使用者的資訊(未設定前只能看到isEmpty: true, isLoaded: false)\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}